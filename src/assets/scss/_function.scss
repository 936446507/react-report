//function
//获取变量
@function get($name) {
  @return map-get($userTheme, $name)
}


$imgBaseurl: "";
@function imgurl($path) {
  @return url(#{$imgBaseurl}#{$path});
}

//px转REM
$fz: 75px;
@function toRem($px) {
  @return $px / $fz * 1rem;
}

//转百分比
@function toPer($px, $totalpx) {
  @return $px / $totalpx * 100 * 1%;
}

//清除浮动
@mixin clearfix() {
  &:before,
  &:after {
      content: " ";
      display: table;
  }
  &:after {
      clear: both;
  }
}
@mixin indent(){
  letter-spacing: 0px;
  text-indent: 0px;
}
@mixin placeholderColor($color){
  &::-webkit-input-placeholder{
    color:$color;
  }
  &::-moz-placeholder{   /* Mozilla Firefox 19+ */
    color:$color;
  }
  &:-moz-placeholder{    /* Mozilla Firefox 4 to 18 */
    color:$color;
  }
  &:-ms-input-placeholder{  /* Internet Explorer 10-11 */
    color:$color;
  }
}

//共用组件样式
@mixin btn($width,$height,$font-size){
  width:$width;
  height:$height;
  line-height:$height;
  text-align: center;
  border-radius:$height;
  background: #ecbe03;
  color: #fff;
  font-size: $font-size;
}

@mixin switch(){
  width: 100%;
  height: toRem(60px);
  border-radius: toRem(30px);
  background: #f2f2f2;
  border: 1px solid #cccccc;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  &-li {
    width: toRem(347px);
    height: toRem(50px);
    line-height: toRem(50px);
    text-align: center;
    font-size: toRem(28px);
    color: #999999;
  }
  &-li-sel {
    border-radius: toRem(28px);
    background-image: linear-gradient(-29deg, #e3d36a 0%, #f3d400 100%);
    color:#666666;
  }
}

//方法1(做什么边框都可以包括圆角)
@mixin mobile-border($border-map){
  @each $key, $value in $border-map{
    #{$key} : $value;
  }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    &{
      position: relative;
      border : none;
    }
    &:after{
      pointer-events: none;
      box-sizing: border-box;
      content: '';
      position: absolute;
      top:0px;
      left:0px;
      width: 200%;
      height: 200%;
      @each $key, $value in $border-map{
        @if($key == border-radius){
          #{$key}:$value*2;
        }@else{
          #{$key}:$value;
        }
      }
      -webkit-transform: scale(0.5,0.5);
              transform: scale(0.5,0.5);
      -webkit-transform-origin: 0 0;
              transform-origin: 0 0;
    }
  }
  @media screen and (-webkit-min-device-pixel-ratio: 3) {
    &{
      position: relative;
      border: none;
    }
    &:after{
      box-sizing: border-box;
      content: '';
      position: absolute;
      pointer-events: none;
      top:0px;
      left:0px;
      width: 300%;
      height: 300%;
      @each $key, $value in $border-map{
        @if($key == border-radius){
          #{$key}:$value*3;
        }@else{
          #{$key}:$value;
        }
      }
      -webkit-transform: scale(0.33333,0.33333);
              transform: scale(0.33333,0.33333);
      -webkit-transform-origin: 0 0;
              transform-origin: 0 0;
    }
  }
}

@mixin mobile-border2($type,$style,$length: 100%){
  border-#{$type}:$style;
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    &{
      position: relative;
      border:none;
    }
    &:after{
      content: "";
      box-sizing: border-box;
      position: absolute;
      $deg: 0deg;
      @if $type == bottom or $type == top{
        width:$length;
        height: nth($style, 1);
        $deg: 0deg;
      } @else if $type == left or $type == right{
        width: nth($style, 1);
        height:$length;
        $deg: 90deg;
      }
      #{$type}:0px;
      background: linear-gradient(#{$deg}, rgb(0, 0, 0) 50%, transparent 50%);
    }
  }
  @media screen and (-webkit-min-device-pixel-ratio: 3) {
    &{
      position: relative;
      border:none;
    }
    &:after{
    content: "";
    position: absolute;
    $deg: 0deg;
    @if $type == bottom or $type == top{
      width:$length;
      height: nth($style, 1);
      $deg: 0deg;
    } @else if $type == left or $type == right{
      width: nth($style, 1);
      height:$length;
      $deg: 90deg;
    }
    #{$type}:0px;
    background: linear-gradient(#{$deg}, rgb(0, 0, 0) 33%, transparent 33%);
    }
   }
}